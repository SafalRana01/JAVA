1. Write a program to print the area of a rectangle of sides 2 and 3 units
   respectively.
 
 public class Questions
 {
     public static void main(String[] args)
     {
           int length = 3;
           int breadth = 2
           int AreaOfRectangle= length*breadth;
                  System.out.println("The area of rectangle is "+AreaOfRectangle+ " unit squares.");
     }
 } 


2. Write a program to find the square of the number 3.9.

 public class Questions
 {
     public static void main(String[] args)
     {
          double i = 3.9;
          double square = i*i;
              System.out.println("The square of given number is "+square);
     }
 }


3. Write a program to convert Fahrenheit into Celsius.

public class Questions
{
    public static void main(String[] args)
    {
           int fahrenheit = 90;
           double celcius = (fahrenheit - 32)*5/9;
                       System.out.println(celcius);
    }
}


4. Write a Java program to print the result of the following operations.
    a. -5 + 8 * 6
    b. (55+9) % 9
    c. 20 + -3*5 / 8
    d. 5 + 15 / 3 * 2 - 8 % 3
    
    a. -5 + 8 * 6
    
    public class Question
    {
        public static void main(String[] args)
        {
             double a = -5 + 8 * 6;
                     System.out.println(a);
        }
    }    


    
    b. (55+9) % 9
     
     public class Question
     {
          public static void main(String[] args)
          {
               double b = (55 + 9) % 9;
                     System.out.println(b);
          }
     }


     
     c. 20 + -3*5 / 8
     
     public class Question
     {
          public static void main(String[] args)
          {
               double c = 20 + -3 * 5 / 8;
                     System.out.println(c);
          }
     } 
     
     
     
      d. 5 + 15 / 3 * 2 - 8 % 3
     
     public class Question
     {
           public static void main(String[] args)
           {
                 double d = 5 + 15 / 3 * 2 - 8 % 3;
                          System.out.println(d);
           }
     }



5. Write a Java program to print the area and perimeter of a circle.

public class Question
{
     public static void main(String[] args)
     {
            final double pi = 22/7;
            int radius = 7;
            double areaOfCircle = pi * radius * radius;
            double perimeterOfCircle = 2 * pi * radius;
                         System.out.println("The area of circle is "+areaOfCircle);
                         System.out.println("The perimeter of circle is "+perimeterOfCircle);
     }
}     



6. Write a Java program to swap two variables using a temporary variable

public class Question
{
      public static void main(String[] args)
      {
            int a = 5;
            int b = 6;
            int temp = b;
            b = a;
            a = temp;
                   System.out.println("The value of a is "+a);
                   System.out.println("The value of b is "+b);
      }
}      


7. Write a Java program to convert a decimal number to a binary number.

public class Question
{
      public static void main(String[] args)
      {
               System.out.println(Integer.toBinaryString(130));
      }
}      



8. Write a Java program to compare two numbers.
      Input Data:
      Input first integer: 25
      Input second integer: 39
         Expected Output
         25 != 39
         25 < 39
         25 <= 39


public class Question
{
   public static void main(String[] args)
   {
         int a = 25;
         int b = 39;
         if(a == b){
              System.out.println(a+ " = "+b);
         }if(a < b){
              System.out.println(a+ " < "+b);
         }if(a > b){
              System.out.println(a+ " > "+b);
         }if(a <= b){
              System.out.println(a+ " <= "+b);
         }if(a >= b){
              System.out.println(a+ " >= "+b);
         }if(a != b){
              System.out.println(a+ " != "+b);
         }
    }
}


9. WAP to check if the given number is even or odd.

public class Question
{
    public static void main(String[] args)
    {
            int i = 119;
            if(i % 2 == 0){
                 System.out.println("This is even number");
            }else{
                 System.out.println("This is odd number");
            }
    }
}


10. WAP to print the respective day for the number using a switch statement.
    
    Expected output when the number is 1:
    Monday
   
   Expected output when the number is 7:
   Sunday

   Expected output when the number is 8:
   Unexpected Input
   
public class Question
{
     public static void main(String[] args)
     {
          int days = 1;
             
          switch(days){
             case 1:
                 System.out.println("Monday");
                 break;
             case 2:
                 System.out.println("Tuesday");
                 break;
             case 3:
                 System.out.println("Wednesday");
                 break;
             case 4:
                 System.out.println("Thursday");
                 break;
             case 5:
                 System.out.println("Friday");
                 break;
             case 6:
                 System.out.println("Saturday");
                 break;
             case 7:
                 System.out.println("Sunday");
                 break;
             case 8:
                 System.out.println("Unexpected input");
                 break;
     }
}


--------------------Next----------------------------------
public class Question
{
        public static void main(String[] args)
        {
             int days = 7;
             
             switch(days){
                case 1:
                    System.out.println("Monday");
                    break;
                case 2:
                    System.out.println("Tuesday");
                    break;
                case 3:
                    System.out.println("Wednesday");
                    break;
                case 4:
                    System.out.println("Thursday");
                    break;
                case 5:
                    System.out.println("Friday");
                    break;
                case 6:
                    System.out.println("Saturday");
                    break;
                case 7:
                    System.out.println("Sunday");
                    break;
                case 8:
                    System.out.println("Unexpected input");
                    break;
        }
}

----------------------Next-------------------------------------
public class Question
{
        public static void main(String[] args)
        {
             int days = 8;
             
             switch(days){
                case 1:
                    System.out.println("Monday");
                    break;
                case 2:
                    System.out.println("Tuesday");
                    break;
                case 3:
                     System.out.println("Wednesday");
                    break;
                case 4:
                    System.out.println("Thursday");
                    break;
                case 5:
                    System.out.println("Friday");
                    break;
                case 6:
                    System.out.println("Saturday");
                    break;
                case 7:
                    System.out.println("Sunday");
                    break;
                case 8:
                    System.out.println("Unexpected input");
                    break;
        }
}        


11. WAP to print the cube of the given number up to the 10th position.

public class CubeOfGivenNumber
{
         public static void main(String[] args)
         {
               for(int a = 1; a <= 10; a++){
                     System.out.println("The cube of "+a+" is "+(a*a*a));
               }
         }
}


12. Write a program in Java to display the pattern like a right-angle triangle with a number.
 Expected Output
 1
 12
 123
 1234
 12345
 123456
 1234567
 12345678
 123456789
 12345678910

public class RightAngelTriangle
{
         public static void main(String[] args)
         {
               for(int a = 1; a <= 10; a++){
                     for(int b = 1; b <= a; b++){
                            System.out.print(b);
                     }
                     System.out.println();
               }
         }
}


13. Write a program to display the following outputs using a loop:
   * * * * *
   * * * *
   * * *
   * *
   *
   
   
public class StarBackLoop
{
         public static void main(String[] args)
         {
                  for(int m = 1; m <= 5; m++){
                        for(int n = 5; n >= m; n--){
                              System.out.print("*");
                        }
                        System.out.println();
                  }
         }
}



14. WAP to store numbers from 1 to 100 in an array using a loop statement.

public class NumberStore
{

         public static void main(String[] args)
         {
               int[] numbers = new int[100];
    
               for (int i = 0; i < 100; i++) {
                     numbers[i] = i + 1;
                     System.out.println(numbers[i]);
               }
               
         }
}



15.    WAP to compute the sum and the average of the array elements
             int[] numbers = {2, -9, 0, 5, 12, -25, 22, 9, 8, 12};
             
 public class SumAndAverage
{

         public static void main(String[] args)
         {
             int[] numbers = {2, -9, 0, 5, 12, -25, 22, 9, 8, 12};
             int sum = 0;
             double average = 0;
        
             for(int i = 0; i < numbers.length; i++){
                  sum += numbers[i];
                  average = (double) sum / numbers.length;
             }
             System.out.println("The sum of array's element is "+sum);
             System.out.println(average);
         }
}



16.   WAP to print each element of the given array
            int[][] a = {
                        {1, 2, 3},
                        {4, 5, 6, 9},
                        {7},
                        };


public class NumberInPattern
{
            public static void main(String[] args)
            {
                     int[][] a = {
                                 {1, 2, 3},
                                 {4, 5, 6, 9},
                                 {7},
                             };
                     // Using a loop to iterate over the rows of the array
                     for (int i = 0; i < a.length; i++) {
                              // Using another loop to iterate over the elements in the current row
                              for (int j = 0; j < a[i].length; j++) {
                                    // Printing the current element
                                    System.out.print(a[i][j] + " "); 
                              }
                              // Moving to a new line after printing all the elements in the current row
                              System.out.println();
                     }
            }
}



17.    WAP to count numbers of even and odd numbers in the given array
       int[] numbers = {2, -9, 0, 5, 12, -25, 22, 9, 8, 12};
       
       
public class CountEvenAndOddNumbers
{
            public static void main(String[] args)
            {
                     int[] numbers = {2, -9, 0, 5, 12, -25, 22, 9, 8, 12}; // Given
                     int evenCount = 0; // Declaring a variable to hold the count of even numbers
                     int oddCount = 0; // Declaring a variable to hold the count of odd numbers
                     // Using a loop to iterate over the elements of the array
                     for (int i = 0; i < numbers.length; i++) {
                              if (numbers[i] % 2 == 0) { // Checking if the current element is even or odd
                                    evenCount++; // Increment the count of even numbers
                              } else {
                                    oddCount++; // Increment the count of odd numbers
                              }
                     }
                     // Printing the results
                      System.out.println("Number of even numbers: " + evenCount);
                      System.out.println("Number of odd numbers: " + oddCount);
            }
}





18.     WAP to print the array {{1,2},{3,4}} in the following pattern
                        1 2
                        3 4


public class PrintingNumberInPattern
{
            public static void main(String[] args)
            {
                     int[][] a = {{1, 2}, {3, 4}}; //Given
                     // Using a loop to iterate over the rows of the array
                     for (int i = 0; i < a.length; i++) {
                              // Using another loop to iterate over the elements in the current row
                              for (int j = 0; j < a[i].length; j++) {
                                    // Printing the current element
                                    System.out.print(a[i][j] + " "); 
                              }
                              // Moving to a new line after printing all the elements in the current row
                              System.out.println();
                     }
            }
}



19.     WAP to print the unique elements for the given array
        int[] array = {1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1};
        
        
public class UniqueElementsArray
{
                              public static void main(String[] args)
                              {
                                          int[] array = {1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1};
                                          // Using a loop to iterate over the elements of the array
                                          for (int i = 0; i < array.length; i++) {
                                                      boolean found = false; // Checking if the current element has already been printed
                                                      for (int j = 0; j < i; j++) {
                                                               if (array[i] == array[j]) {
                                                                     found = true;
                                                                     break;
                                                               }
                                                      }
                                                      // If the current element has not been printed, print it
                                                      if (!found) {
                                                               System.out.print(array[i]+ " "); //Printing the unique numbers
                                                      }
                                          }
                               }
}


----------------------------------- NEXT METHOD ------------------------------------------------------------


public class UniqueElementsArray
{
           public static int[] getUniqueElements(int[] input) 
           {
                  // Create an empty array to store the unique elements
                  int[] uniqueElements = new int[input.length];

                  // The index to store the next unique element
                  int index = 0;

                  // Loop through the input array
                  for (int element : input) {
                                 // Check if the element is already present in the unique elements array
                                 boolean found = false;
                                 for (int i = 0; i < index; i++) {
                                                if (uniqueElements[i] == element) {
                                                            found = true;
                                                            break;
                                                }
                                 }

                                 // If the element is not present, add it to the unique elements array
                                 if (!found) {
                                         uniqueElements[index] = element;
                                          index++;
                                 }
                  }

                  // Trim the array to the correct size and return it
                  return uniqueElements;
         }
}
